{"version":3,"sources":["../../shared/checkGuess.js","actions/canvas/canvasTypes.js","reducers/reducer.js","reducers/index.js","config/store.js","actions/canvas/actions.js","shared/websocket.js","components/Grid/Grid.jsx","components/Ship/Ship.jsx","shared/createGrid.js","components/Guesses/Guesses.jsx","components/Canvas.jsx","shared/gameWebSocketHandlers.js","actions/system/sharedActions.js","components/EndDialog/EndDialog.jsx","components/FireButton/FireButton.jsx","components/ShipLists/ShipLists.jsx","components/VisionSwitch/VisionSwitch.jsx","components/ChangeShipNames/ChangeShipNames.jsx","components/Settings/Settings.jsx","components/SideBar/SideBar.jsx","pages/GamePage.jsx","pages/MainPage.jsx","config/routes.js","index.js","../../shared/gridConflicts.js","../../shared/gameStates.js","../../shared/messageTypes.js"],"names":["module","exports","guess","guesses","find","g","x","y","canvasTypes","MOVE_SHIP","ROTATE_SHIP","OTHER","OWN","SWITCH_VISION","CHANGE_GRIDSIZE","initialState","ships","enemyGuesses","ready","state","gameStates","PLACING_SHIPS","showing","gridSize","inTurn","selectedBlock","enemyShipsSunk","reducer","produce","draft","action","type","payload","messageTypes","ship","rotation","GET_STATE","TEAM_READY","STATE_CHANGE","SELECT_BLOCK","block","GUESS","push","sunk","ENEMY_GUESS","Object","values","name","allReducers","combineReducers","canvas","configureStore","preloadedState","middlewares","thunk","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","moveShip","rotateShip","switchVision","selectBlock","WebSocketClient","instance","this","listeners","onOpenListeners","onCloseListeners","close","reconnection","wsp","WebSocketAsPromised","process","packMessage","data","JSON","stringify","unpackMessage","parse","addListeners","isOpened","then","clearInterval","isClosing","open","onClose","addListener","a","setInterval","isClosed","openConnection","forEach","listener","onOpen","onUnpackedMessage","callback","filter","removeAllListeners","message","sendPacked","addOnceListener","getInstance","GridRect","selectable","props","useSelector","useState","fill","setFill","selected","setSelected","useEffect","originalX","originalY","sendBlock","sendMessage","onClick","onTap","onMouseEnter","onMouseLeave","Grid","grid","moveable","map","rect","index","stroke","width","height","Ship","xPos","yPos","length","hasOffset","dispatch","useDispatch","useImage","rotateIcon","replace","shipImage","rotate","newRotation","hasConflict","entries","onDragEnd","e","xCor","Math","floor","target","yCor","setY","setX","draggable","image","Guesses","hit","Canvas","background","amount","i","ii","createGrid","gridLength","store","handler","setMessage","setWinner","history","setConnected","addOnMessageListener","GAME_ENDED","winner","REGISTERED","REGISTER_FAILED","closeConnection","setReady","EndDialog","teamCode","Dialog","DialogTitle","Box","display","m","Button","component","Link","to","FireButton","mt","mx","checkGuess","variant","color","ShipLists","item","Typography","List","ListItem","ListItemText","primary","VisionSwitch","Switch","size","checked","onChange","ChangeShipNames","createInput","fromEntries","inputShips","setInputShips","keys","originalName","dense","TextField","InputLabelProps","shrink","event","value","label","CHANGE_NAMES","names","Settings","settingsOpen","setSettingsOpen","settingsRef","useRef","IconButton","aria-label","aria-controls","aria-haspopup","ref","Popover","anchorEl","current","anchorOrigin","vertical","horizontal","transformOrigin","className","changeGridSize","parseInt","SideBar","ml","mb","flexDirection","GamePage","connected","useParams","useHistory","callDisconnect","callRegister","REGISTER_FOR_TEAM","addOnOpenListener","addOnCloseListener","removeOnOpenListener","removeOnCloseListener","setup","flexWrap","Snackbar","MainPage","setTeamCode","error","helperText","setError","registered","justifyContent","alt","src","noValidate","autoComplete","Routes","path","Main","setWidth","setHeight","main","handleResize","window","innerHeight","innerWidth","addEventListener","removeEventListener","ReactDOM","render","document","getElementById","loopCors","check","skippy","tempShip","IN_TURN"],"mappings":"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","file":"static/js/main.a0b37e0d.chunk.js","sourcesContent":["const checkGuess = (guess, guesses) => !guesses.find(g => g.x === guess.x && g.y === guess.y);\r\n\r\n\r\nmodule.exports = checkGuess;","const canvasTypes = {\r\n    MOVE_SHIP: \"MOVE_SHIP\",\r\n    ROTATE_SHIP: \"ROTATE_SHIP\",\r\n    OTHER: \"OTHER\",\r\n    OWN: \"OWN\",\r\n    SWITCH_VISION: \"SWITCH_VISION\",\r\n    CHANGE_GRIDSIZE: \"CHANGE_GRIDSIZE\"\r\n}\r\n\r\nexport default canvasTypes","import { produce } from \"immer\";\r\nimport messageTypes from 'shared/messageTypes';\r\nimport gameStates from 'shared/gameStates';\r\nimport canvasTypes from './../actions/canvas/canvasTypes';\r\n\r\nconst initialState = {\r\n    ships: {\r\n    },\r\n    guesses: [\r\n\r\n    ],\r\n    enemyGuesses: [\r\n\r\n    ],\r\n    ready: false,\r\n    state: gameStates.PLACING_SHIPS,\r\n    showing: canvasTypes.OWN,\r\n    gridSize: 79,\r\n    inTurn: false,\r\n    selectedBlock: false,\r\n    enemyShipsSunk: []\r\n}\r\n\r\nconst reducer = produce((draft = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case canvasTypes.CHANGE_GRIDSIZE:\r\n            draft.gridSize = payload.gridSize;\r\n            return draft;\r\n        case canvasTypes.SWITCH_VISION:\r\n            draft.showing = draft.showing === canvasTypes.OWN ? canvasTypes.OTHER : canvasTypes.OWN\r\n            return draft;\r\n        case messageTypes.MOVE_SHIP:\r\n            draft.ships[payload.ship].x = payload.x\r\n            draft.ships[payload.ship].y = payload.y\r\n            return draft;\r\n        case messageTypes.ROTATE_SHIP:\r\n            draft.ships[payload.ship].rotation = payload.rotation\r\n            return draft;\r\n        case messageTypes.GET_STATE:\r\n            draft.ships = payload.ships;\r\n            draft.guesses = payload.guesses;\r\n            draft.ready = payload.ready;\r\n            draft.state = payload.state;\r\n            draft.inTurn = payload.inTurn;\r\n            draft.enemyGuesses = payload.enemyGuesses;\r\n            draft.selectedBlock = payload.selectedBlock;\r\n            draft.enemyShipsSunk = payload.enemyShipsSunk;\r\n            return draft\r\n        case messageTypes.TEAM_READY:\r\n            draft.ready = payload.ready;\r\n            return draft;\r\n        case messageTypes.STATE_CHANGE:\r\n            if (payload.inTurn !== null) draft.inTurn = payload.inTurn;\r\n            draft.state = payload.state;\r\n            return draft;\r\n        case messageTypes.SELECT_BLOCK:\r\n            draft.selectedBlock = payload.block;\r\n            return draft\r\n        case messageTypes.GUESS:\r\n            draft.guesses.push(payload.guess);\r\n            draft.inTurn = payload.inTurn;\r\n            if(payload.sunk) draft.enemyShipsSunk.push(payload.sunk);\r\n            return draft;\r\n        case messageTypes.ENEMY_GUESS:\r\n            draft.enemyGuesses.push(payload.guess);\r\n            draft.inTurn = payload.inTurn;\r\n            if(payload.sunk) Object.values(draft.ships).find(ship => ship.name === payload.sunk).sunk = true;\r\n            return draft;\r\n        default:\r\n            return draft;\r\n    }\r\n\r\n});\r\n\r\n\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\nimport reducer from \"./reducer\";\r\n\r\n\r\nexport const allReducers = combineReducers({\r\n\tcanvas: reducer,\r\n});\r\n","import { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { applyMiddleware, createStore } from 'redux'\r\nimport { allReducers } from '../reducers';\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst configureStore = (preloadedState) => {\r\n\tconst middlewares = [thunk]\r\n\tconst middlewareEnhancer = applyMiddleware(...middlewares)\r\n  \r\n\tconst enhancers = [middlewareEnhancer]\r\n\tconst composedEnhancers = composeWithDevTools(...enhancers)\r\n  \r\n\tconst store = createStore(allReducers, preloadedState, composedEnhancers)\r\n  \r\n\treturn store\r\n  }\r\n\r\nexport default configureStore();\r\n\r\n","import canvasTypes from './canvasTypes';\r\nimport messageTypes from 'shared/messageTypes';\r\n\r\n\r\nexport const moveShip = (x, y, ship) => {\r\n    return { type: messageTypes.MOVE_SHIP, payload: { x: x, y: y, ship: ship } }\r\n}\r\n\r\nexport const rotateShip = (rotation, ship) => {\r\n    return { type: messageTypes.ROTATE_SHIP, payload: { rotation: rotation, ship: ship } }\r\n}\r\nexport const switchVision = () => {\r\n    return { type: canvasTypes.SWITCH_VISION }\r\n}\r\n\r\nexport const selectBlock = (block) => {\r\n    return { type: messageTypes.SELECT_BLOCK, payload: { block } }\r\n}\r\n\r\nexport const changeGridSize = (gridSize) => {\r\n    return { type: canvasTypes.CHANGE_GRIDSIZE, payload: { gridSize}}\r\n}","import WebSocketAsPromised from 'websocket-as-promised';\r\n\r\n\r\n\r\nclass WebSocketClient {\r\n\tconstructor() {\r\n\t\tif (!WebSocketClient.instance) {\r\n\t\t\tWebSocketClient.instance = this;\r\n\t\t}\r\n\t\tthis.listeners = [];\r\n\t\tthis.onOpenListeners = [];\r\n\t\tthis.onCloseListeners = [];\r\n\t\tthis.close = false;\r\n\t\tthis.reconnection = () => { };\r\n\t\tthis.wsp = new WebSocketAsPromised(process.env.REACT_APP_WS_URL, {\r\n\t\t\tpackMessage: data => JSON.stringify(data),\r\n\t\t\tunpackMessage: data => JSON.parse(data),\r\n\t\t});\r\n\t\tthis.addListeners();\r\n\t}\r\n\r\n\tgetInstance() {\r\n\t\treturn WebSocketClient.instance;\r\n\t}\r\n\r\n\tcloseConnection() {\r\n\t\tthis.close = true;\r\n\t\tif (this.wsp.isOpened) {\r\n\t\t\treturn this.wsp.close().then(() => {\r\n\t\t\t\tclearInterval(this.reconnection)\r\n\t\t\t\tWebSocketClient.instance = false;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tclearInterval(this.reconnection)\r\n\t\t\tWebSocketClient.instance = false;\r\n\t\t}\r\n\t}\r\n\r\n\tasync openConnection() {\r\n\t\tif (this.close) this.close = false;\r\n\t\tif (!this.wsp.isOpened && !this.wsp.isClosing) {\r\n\t\t\tawait this.wsp.open();\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\taddListeners() {\r\n\t\tthis.wsp.onClose.addListener(async () => {\r\n\t\t\tif (!this.close) {\r\n\t\t\t\tthis.reconnection = setInterval(async () => {\r\n\t\t\t\t\tif (this.wsp.isClosed && !this.close) {\r\n\t\t\t\t\t\tthis.openConnection().then((wsp) => {\r\n\t\t\t\t\t\t\tif (this.wsp.isOpened) {\r\n\t\t\t\t\t\t\t\tclearInterval(this.reconnection);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 100)\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.onOpenListeners.forEach(listener => {\r\n\t\t\tthis.wsp.onOpen.addListener(listener);\r\n\t\t})\r\n\t\tthis.onCloseListeners.forEach(listener => {\r\n\t\t\tthis.wsp.onClose.addListener(listener);\r\n\t\t})\r\n\t\tthis.listeners.forEach(listener => {\r\n\t\t\tthis.wsp.onUnpackedMessage.addListener(listener);\r\n\t\t});\r\n\t}\r\n\r\n\taddOnMessageListener(callback) {\r\n\t\tthis.wsp.onUnpackedMessage.addListener(callback);\r\n\t\tthis.listeners.push(callback);\r\n\t\treturn () => {\r\n\t\t\tthis.listeners = this.listeners.filter(listener => listener !== callback)\r\n\t\t\tthis.wsp.removeAllListeners();\r\n\t\t\tthis.addListeners();\r\n\t\t}\r\n\t}\r\n\r\n\taddOnOpenListener(callback) {\r\n\t\tif(this.onOpenListeners.find(listener => listener === callback)) return;\r\n\t\tthis.onOpenListeners.push(callback);\r\n\t\tthis.wsp.onOpen.addListener(callback);\r\n\t}\r\n\r\n\taddOnCloseListener(callback) {\r\n\t\tif(this.onCloseListeners.find(listener => listener === callback)) return;\r\n\t\tthis.onCloseListeners.push(callback);\r\n\t\tthis.wsp.onClose.addListener(callback);\r\n\t}\r\n\r\n\tremoveOnCloseListener(callback) {\r\n\t\tthis.onCloseListeners = this.onCloseListeners.filter(listener => listener !== callback);\r\n\t\tthis.wsp.removeAllListeners();\r\n\t\tthis.addListeners();\r\n\t}\r\n\r\n\tremoveOnOpenListener(callback) {\r\n\t\tthis.onOpenListeners = this.onOpenListeners.filter(listener => listener !== callback);\r\n\t\tthis.wsp.removeAllListeners();\r\n\t\tthis.addListeners();\r\n\t}\r\n\r\n\tasync sendMessage(message) {\r\n\t\tawait this.openConnection();\r\n\t\tif (this.wsp.isOpened) {\r\n\t\t\tthis.wsp.sendPacked(message);\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tthis.wsp.onOpen.addOnceListener(() => {\r\n\t\t\t\tthis.wsp.sendPacked(message);\r\n\t\t\t\treturn;\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport default new WebSocketClient().getInstance();","import React, { useState, useEffect } from \"react\";\r\nimport { Rect } from \"react-konva\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectBlock } from \"../../actions/canvas/actions\";\r\nimport canvasTypes from \"../../actions/canvas/canvasTypes\";\r\nimport WebSocketClient from \"../../shared/websocket\";\r\n\r\n\r\nconst Grid = ({ grid, moveable }) => {\r\n  const { showing, inTurn, gridSize } = useSelector((state) => state.canvas);\r\n  const selectable = !moveable && showing === canvasTypes.OTHER && inTurn;\r\n\r\n  return grid.map((rect, index) => (\r\n    <GridRect\r\n      selectable={selectable}\r\n      key={index}\r\n      stroke=\"black\"\r\n      width={gridSize}\r\n      height={gridSize}\r\n      x={1 + (rect.x * gridSize)}\r\n      y={1 + (rect.y * gridSize)}\r\n      originalX={rect.x}\r\n      originalY={rect.y}\r\n    />\r\n  ));\r\n};\r\n\r\nconst GridRect = ({ selectable, ...props }) => {\r\n  const { selectedBlock } = useSelector((state) => state.canvas);\r\n  const [fill, setFill] = useState(\"white\");\r\n  const [selected, setSelected] = useState();\r\n\r\n\r\n  useEffect(() => {\r\n    let selected = selectedBlock && props.originalX === selectedBlock.x && props.originalY === selectedBlock.y && selectable;\r\n    setSelected(selected);\r\n    if (selected) {\r\n      setFill(\"#3f51b598\");\r\n    } else {\r\n      setFill();\r\n    }\r\n  }, [selectedBlock, selectable, props.originalX, props.originalY]);\r\n\r\n  const sendBlock = () => {\r\n    WebSocketClient.sendMessage(selectBlock({ x: props.originalX, y: props.originalY }));\r\n  };\r\n\r\n  const onMouseEnter = () => {\r\n    if (selected) {\r\n      setFill(\"#3f51b5c7\");\r\n    } else {\r\n      setFill(\"#8b8b8ba0\");\r\n    }\r\n  };\r\n  const onMouseLeave = () => {\r\n    if (selected) {\r\n      setFill(\"#3f51b5c7\");\r\n    } else {\r\n      setFill();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Rect\r\n      onClick={() => !selected && selectable && sendBlock()}\r\n      onTap={() => !selected && selectable && sendBlock()}\r\n      onMouseEnter={!selected && selectable ? onMouseEnter : null}\r\n      onMouseLeave={!selected && selectable ? onMouseLeave : null}\r\n      fill={fill}\r\n      {...props}\r\n    ></Rect>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport { Rect, Image, Group } from \"react-konva\";\r\nimport { moveShip, rotateShip } from \"./../../actions/canvas/actions\";\r\nimport useImage from \"use-image\";\r\nimport hasConflict from \"shared/gridConflicts\";\r\nimport WebSocketClient from \"../../shared/websocket\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst Ship = ({ xPos, yPos, length = 2, rotation = 0, gridSize, ship, moveable, hasOffset }) => {\r\n  const dispatch = useDispatch()\r\n  const { ships } = useSelector(state => state.canvas)\r\n\r\n  const [rotateIcon] = useImage(\"/assets/images/rotate-2-xxl.png\");\r\n  const [shipImage] = useImage(`/assets/images/${ship.replace(/\\s|[0-9]/g, '')}.png`);\r\n\r\n  const xOffset = 1;\r\n  const yOffset = 2;\r\n\r\n\r\n  let x = (x) => x * gridSize + (!hasOffset || rotation ? gridSize / 4 + xOffset : 0);\r\n  let y = (y) => y * gridSize + (!hasOffset || !rotation ? gridSize / 4 + yOffset : 0);\r\n\r\n  const snapToGrid = (e) => {\r\n    let xCor = Math.floor(e.target.x() / gridSize);\r\n    let yCor = Math.floor(e.target.y() / gridSize);\r\n\r\n    if (hasConflict(xCor, yCor, rotation, Object.entries(ships), ship, length)) {\r\n      e.target.setY(y(ships[ship].y));\r\n      e.target.setX(x(ships[ship].x));\r\n      return;\r\n    }\r\n\r\n    e.target.setY(y(yCor));\r\n    e.target.setX(x(xCor));\r\n    dispatch(moveShip(xCor, yCor, ship));\r\n    WebSocketClient.sendMessage(moveShip(xCor, yCor, ship));\r\n  };\r\n\r\n  const rotate = () => {\r\n    const newRotation = !rotation ? 90 : 0;\r\n    if (hasConflict(xPos, yPos, newRotation, Object.entries(ships), ship, length)) return;\r\n    dispatch(rotateShip(!rotation ? 90 : 0, ship));\r\n    WebSocketClient.sendMessage(rotateShip(!rotation ? 90 : 0, ship));\r\n  };\r\n\r\n  let width = hasOffset ? gridSize : gridSize / 2;\r\n  let height = hasOffset ? gridSize : gridSize / 2;\r\n\r\n  if (rotation === 0) height = (gridSize / 2) * ((length - 0.5) * 2);\r\n  if (rotation === 90) width = (gridSize / 2) * ((length - 0.5) * 2);\r\n\r\n  return (\r\n    <Group x={x(xPos)} y={y(yPos)} onDragEnd={snapToGrid} draggable={moveable}>\r\n      {shipImage ? (\r\n        <Image\r\n          rotation={rotation ? rotation + 180 : rotation}\r\n          y={rotation ? (!hasOffset ? gridSize / 2 : gridSize) : 0}\r\n          image={shipImage}\r\n          height={rotation ? width : height}\r\n          width={rotation ? height : width}\r\n        />\r\n      ) : (\r\n        <Rect fill=\"black\" stroke=\"white\" width={width} height={height}></Rect>\r\n      )}\r\n      {moveable ? <Image onTap={rotate} onClick={rotate} image={rotateIcon} width={gridSize / 2} height={gridSize / 2} x={2} y={2} /> : null}\r\n    </Group>\r\n  );\r\n};\r\n\r\nexport default Ship;\r\n","let grid = [];\r\n\r\nexport const createGrid = (amount = 10) => {\r\n    for (let i = 0; i < amount; i++) {\r\n      for (let ii = 0; ii < amount; ii++) {\r\n        grid.push({x: ii, y: i });\r\n      }\r\n    };\r\n  };\r\n\r\n\r\n\r\nexport default grid;","import React from \"react\";\r\nimport { Ellipse } from \"react-konva\";\r\nimport { useSelector } from \"react-redux\";\r\nimport canvasTypes from \"../../actions/canvas/canvasTypes\";\r\n\r\nconst Guesses = ({ gridSize }) => {\r\n  const xOffset = 1;\r\n  const yOffset = 1;\r\n\r\n  const { enemyGuesses, guesses, showing } = useSelector((state) => state.canvas);\r\n\r\n  const usingGuesses = showing === canvasTypes.OWN ? enemyGuesses : guesses;\r\n\r\n  return usingGuesses.map((guess, index) => (\r\n    <Ellipse\r\n      key={index}\r\n      stroke=\"black\"\r\n      fill={guess.hit ? \"red\" : \"white\"}\r\n      width={gridSize / 3}\r\n      height={gridSize / 3}\r\n      x={(guess.x * gridSize + xOffset) + (gridSize / 2)}\r\n      y={(guess.y * gridSize + yOffset) + (gridSize / 2)}\r\n    />\r\n  ));\r\n};\r\n\r\nexport default Guesses;\r\n","import React from \"react\";\r\nimport { Stage, Layer, Image } from \"react-konva\";\r\nimport { Provider, useSelector } from \"react-redux\";\r\nimport Grid from \"./Grid/Grid\";\r\nimport Ship from \"./Ship/Ship\";\r\nimport gameStates from \"shared/gameStates\";\r\nimport canvasTypes from \"../actions/canvas/canvasTypes\";\r\nimport store from \"../config/store\";\r\nimport grid, { createGrid } from \"../shared/createGrid\";\r\nimport Guesses from \"./Guesses/Guesses\";\r\nimport useImage from \"use-image\";\r\nimport { gridLength } from \"shared/gridConflicts\";\r\n\r\nconst Canvas = () => {\r\n  const { ships, state, ready, showing, gridSize } = useSelector((state) => state.canvas);\r\n  const moveable = state === gameStates.PLACING_SHIPS && !ready;\r\n  const [background] = useImage(`/assets/images/bk_water.jpg`);\r\n\r\n  if (!grid.length) {\r\n    createGrid(gridLength);\r\n  }\r\n\r\n  return (\r\n    <Stage width={(gridSize * gridLength) + 2} height={(gridSize * gridLength) + 2}>\r\n      <Provider store={store}>\r\n        <Layer>\r\n          <Image image={background} x={1} y={1} width={gridSize * gridLength} height={gridSize * gridLength}></Image>\r\n        </Layer>\r\n        <Layer>\r\n          <Grid moveable={moveable} grid={grid}></Grid>\r\n        </Layer>\r\n        <Layer>\r\n          {showing === canvasTypes.OWN &&\r\n            Object.entries(ships).map((ship) => (\r\n              <Ship\r\n                moveable={moveable}\r\n                key={ship[0]}\r\n                ship={ship[0]}\r\n                gridSize={gridSize}\r\n                xPos={ship[1].x}\r\n                yPos={ship[1].y}\r\n                length={ship[1].length}\r\n                rotation={ship[1].rotation}\r\n                hasOffset={ship[1].hasOffset || false}\r\n              ></Ship>\r\n            ))}\r\n          <Guesses gridSize={gridSize} />\r\n        </Layer>\r\n      </Provider>\r\n    </Stage>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import { setReady } from \"../actions/system/sharedActions\";\r\nimport { stateChange } from \"./../actions/system/sharedActions\";\r\nimport { selectBlock } from \"../actions/canvas/actions\";\r\nimport canvasTypes from \"./../actions/canvas/canvasTypes\";\r\nimport WebSocketClient from \"./websocket\";\r\nimport messageTypes from \"shared/messageTypes\";\r\nimport { switchVision } from \"./../actions/canvas/actions\";\r\n\r\nexport const setup = (setConnected, connected, teamCode) => {\r\n  const callDisconnect = () => {\r\n    setConnected(false)\r\n  }\r\n  const callRegister = () => {\r\n    if (!connected) {\r\n      WebSocketClient.sendMessage({ type: messageTypes.REGISTER_FOR_TEAM, payload: { teamCode: teamCode } });\r\n    } else {\r\n      setConnected(true);\r\n    }\r\n    WebSocketClient.addOnOpenListener(callRegister);\r\n    WebSocketClient.addOnCloseListener(callDisconnect);\r\n  };\r\n\r\n\r\n  WebSocketClient.openConnection();\r\n  callRegister();\r\n  return () => {\r\n    WebSocketClient.removeOnOpenListener(callRegister);\r\n    WebSocketClient.removeOnCloseListener(callDisconnect);\r\n  }\r\n}\r\n\r\nconst handler = (setMessage, setWinner, history, dispatch, showing, ready, setConnected) =>\r\n  WebSocketClient.addOnMessageListener(({ type, payload }) => {\r\n    if (type) {\r\n      switch (type) {\r\n        case messageTypes.GAME_ENDED:\r\n          if (showing === canvasTypes.OTHER) dispatch(switchVision());\r\n          setWinner(payload.winner);\r\n          return;\r\n        case messageTypes.GUESS:\r\n          if (payload.sunk) {\r\n            setMessage(`You sunk the enemy ${payload.sunk}`);\r\n          } else if (payload.guess.hit) {\r\n            setMessage(\"You hit an enemy ship!\");\r\n          }\r\n          dispatch({ type, payload });\r\n          return;\r\n        case messageTypes.ENEMY_GUESS:\r\n          if (payload.sunk) {\r\n            setMessage(`The enemy sunk your ${payload.sunk}`);\r\n          } else if (payload.guess.hit) {\r\n            setMessage(\"One of your ships has been hit!\");\r\n          }\r\n          dispatch({ type, payload });\r\n          return;\r\n        case messageTypes.SELECT_BLOCK:\r\n          dispatch(selectBlock({ x: payload.x, y: payload.y }));\r\n          return;\r\n        case messageTypes.GET_STATE:\r\n          dispatch({ type: messageTypes.GET_STATE, payload: payload });\r\n          return;\r\n        case messageTypes.STATE_CHANGE:\r\n          dispatch(stateChange(payload.state, payload.inTurn));\r\n          return;\r\n        case messageTypes.REGISTERED:\r\n          setConnected(true);\r\n          dispatch({ type: messageTypes.GET_STATE, payload: payload });\r\n          return;\r\n        case messageTypes.REGISTER_FAILED:\r\n          WebSocketClient.closeConnection();\r\n          history.push(`/`);\r\n          return;\r\n        case messageTypes.TEAM_READY:\r\n          if (payload.ready && !ready) {\r\n            setMessage(\"Your team is ready\");\r\n          } else if (!payload.ready && ready) {\r\n            setMessage(\"Team set unready\");\r\n          } else if (!payload.ready && !ready) {\r\n            setMessage(\"Please check your ships\");\r\n          }\r\n          dispatch(setReady(payload.ready));\r\n          return;\r\n        default:\r\n          return;\r\n      }\r\n    }\r\n  })\r\n\r\n\r\nexport default handler;","import messageTypes from 'shared/messageTypes';\r\n\r\nexport const setGameState = (state) => {\r\n   return { type: messageTypes.GET_STATE, payload: state }\r\n}\r\n\r\nexport const setReady = (ready) => {\r\n   return { type: messageTypes.TEAM_READY, payload: { ready } }\r\n}\r\n\r\nexport const stateChange = (state, inTurn) => {\r\n   return { type: messageTypes.STATE_CHANGE, payload: { state, inTurn } }\r\n}","import { Box, Button, Dialog, DialogTitle } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst EndDialog = ({winner, teamCode}) => {\r\n  return (\r\n    <Dialog open={!!winner}>\r\n      <DialogTitle>{winner === teamCode ? \"You have won!\" : \"Your team has lost...\"}</DialogTitle>\r\n      <Box display=\"flex\" m=\"auto\">\r\n        <Button component={Link} to=\"/\">\r\n          Go home\r\n        </Button>\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EndDialog;\r\n","import { Box, Button } from \"@material-ui/core\";\r\nimport canvasTypes from \"../../actions/canvas/canvasTypes\";\r\nimport checkGuess from \"shared/checkGuess\";\r\nimport messageTypes from \"shared/messageTypes\";\r\nimport WebSocketClient from \"../../shared/websocket\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst FireButton = ({ setMessage}) => {\r\n  const {  showing, selectedBlock, inTurn, guesses } = useSelector((state) => state.canvas);\r\n\r\n  const sendGuess = () => {\r\n    if (checkGuess(selectedBlock, guesses)) {\r\n      WebSocketClient.sendMessage({ type: messageTypes.GUESS, payload: selectedBlock });\r\n    } else {\r\n      setMessage(\"Already Guessed there\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    selectedBlock &&\r\n    showing !== canvasTypes.OWN &&\r\n    inTurn && (\r\n      <Box mt={3} mx=\"auto\">\r\n        <Button onClick={sendGuess} variant=\"contained\" color=\"secondary\">\r\n          Fire!\r\n        </Button>\r\n      </Box>\r\n    )\r\n  );\r\n};\r\n\r\nexport default FireButton;\r\n","import { Box, Typography, Grid, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst ShipLists = () => {\r\n  const { enemyShipsSunk, ships } = useSelector((state) => state.canvas);\r\n\r\n\r\n  return (\r\n    <Box mt={3}>\r\n      <Grid item>\r\n        <Typography variant=\"h6\">Enemy ships sunk:</Typography>\r\n        <div>\r\n          <List>\r\n            {enemyShipsSunk.map((ship) => (\r\n              <ListItem key={ship}>\r\n                <ListItemText primary={ship} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography variant=\"h6\">Own ships sunk:</Typography>\r\n        <div>\r\n          <List>\r\n            {Object.values(ships)\r\n              .filter((ship) => ship.sunk)\r\n              .map((ship) => (\r\n                <ListItem key={ship.name}>\r\n                  <ListItemText primary={ship.name} />\r\n                </ListItem>\r\n              ))}\r\n          </List>\r\n        </div>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ShipLists;\r\n","import { Box, Switch } from \"@material-ui/core\";\r\nimport { switchVision } from \"../../actions/canvas/actions\";\r\nimport canvasTypes from \"../../actions/canvas/canvasTypes\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n\r\nconst VisionSwitch = () => {\r\n  const dispatch = useDispatch();\r\n  const { showing } = useSelector((state) => state.canvas);\r\n\r\n\r\n  return (\r\n    <Box>\r\n      Own ships\r\n      <Switch\r\n        size=\"small\"\r\n        checked={showing !== canvasTypes.OWN}\r\n        onChange={() => {\r\n          dispatch(switchVision());\r\n        }}\r\n      />\r\n      Guesses\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default VisionSwitch;\r\n","import WebSocketClient from \"../../shared/websocket\";\r\nimport { useSelector } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Box, Typography, Grid, List, ListItem, ListItemText, TextField, Button } from \"@material-ui/core\";\r\nimport messageTypes from \"shared/messageTypes\";\r\n\r\nconst ChangeShipNames = () => {\r\n  const { ships } = useSelector((state) => state.canvas);\r\n\r\n  const createInput = (ships) => Object.fromEntries(Object.entries(ships).map((ship) => [ship[0], ship[1].name]));\r\n\r\n  const [inputShips, setInputShips] = useState(createInput(ships));\r\n\r\n  useEffect(() => {\r\n    setInputShips(createInput(ships));\r\n  }, [ships]);\r\n\r\n  const saveNames = () => {\r\n    WebSocketClient.sendMessage({ type: messageTypes.CHANGE_NAMES, payload: { names: inputShips } });\r\n  };\r\n\r\n  return (\r\n    <List>\r\n      {Object.keys(ships).map((originalName) => (\r\n        <ListItem dense key={originalName}>\r\n          <TextField\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={(event) => {\r\n              setInputShips({ ...inputShips, [originalName]: event.target.value });\r\n            }}\r\n            label={originalName}\r\n            value={inputShips[originalName]}\r\n          />\r\n        </ListItem>\r\n      ))}\r\n      <ListItem>\r\n        <Button onClick={saveNames} variant=\"contained\" color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </ListItem>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ChangeShipNames;\r\n","import { IconButton, Popover, TextField } from \"@material-ui/core\";\r\nimport { useState, useRef } from \"react\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport \"./Settings.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeGridSize } from \"./../../actions/canvas/actions\";\r\nimport ChangeShipNames from './../ChangeShipNames/ChangeShipNames';\r\n\r\nconst Settings = () => {\r\n  const [settingsOpen, setSettingsOpen] = useState(false);\r\n  const settingsRef = useRef();\r\n  const { gridSize } = useSelector((state) => state.canvas);\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"notifications\"\r\n        aria-controls=\"menu-appbar\"\r\n        aria-haspopup=\"true\"\r\n        onClick={() => {\r\n          setSettingsOpen(!settingsOpen);\r\n        }}\r\n        color=\"inherit\"\r\n        ref={settingsRef}\r\n      >\r\n        <SettingsIcon />\r\n      </IconButton>\r\n      <Popover\r\n        onClose={() => {\r\n          setSettingsOpen(false);\r\n        }}\r\n        open={settingsOpen}\r\n        anchorEl={settingsRef.current}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n      >\r\n        <div className=\"popover-container\">\r\n          <TextField\r\n            type=\"number\"\r\n            onChange={(event) => {\r\n              dispatch(changeGridSize(parseInt(event.target.value) || 0));\r\n            }}\r\n            value={gridSize || \"\"}\r\n            label=\"Grid Size in Pixels\"\r\n          />\r\n        </div>\r\n        <ChangeShipNames />\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { Box, Typography, Button } from \"@material-ui/core\";\r\nimport FireButton from \"./../FireButton/FireButton\";\r\nimport ShipLists from \"./../ShipLists/ShipLists\";\r\nimport VisionSwitch from \"./../VisionSwitch/VisionSwitch\";\r\nimport Settings from \"./../Settings/Settings\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport gameStates from \"shared/gameStates\";\r\nimport messageTypes from \"shared/messageTypes\";\r\nimport WebSocketClient from \"../../shared/websocket\";\r\n\r\nconst SideBar = ({ setMessage }) => {\r\n  const { state, inTurn } = useSelector((state) => state.canvas);\r\n\r\n  const sendReady = () => {\r\n    WebSocketClient.sendMessage({ type: messageTypes.TEAM_READY });\r\n  };\r\n\r\n  return state === gameStates.PLACING_SHIPS ? (\r\n    <Box ml={3} mt={3} mb=\"auto\" display=\"flex\">\r\n        <Button onClick={sendReady} variant=\"contained\" color=\"primary\">\r\n          Ready\r\n        </Button>\r\n        <Settings />\r\n    </Box>\r\n  ) : (\r\n    <Box ml={3} mt={3} display=\"flex\" flexDirection=\"column\">\r\n      <Box display=\"flex\"><Box mt={1}><Typography variant=\"h6\">{inTurn ? \"Your turn to fire:\" : \"Waiting for enemy to fire...\"} </Typography></Box><Settings /></Box>\r\n      <VisionSwitch />\r\n      <FireButton setMessage={setMessage} />\r\n      <ShipLists />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import { React, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Box, Typography, Snackbar } from \"@material-ui/core\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Canvas from \"../components/Canvas\";\r\n\r\nimport handler, { setup } from \"./../shared/gameWebSocketHandlers\";\r\nimport EndDialog from \"../components/EndDialog/EndDialog\";\r\nimport SideBar from \"../components/SideBar/SideBar\";\r\n\r\n\r\nconst GamePage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { ready, showing } = useSelector((state) => state.canvas);\r\n  const [connected, setConnected] = useState();\r\n  const { teamCode } = useParams();\r\n  const [message, setMessage] = useState(false);\r\n  const [winner, setWinner] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => setup(setConnected, connected, teamCode), [teamCode, connected]);\r\n\r\n  useEffect(() => handler(setMessage, setWinner, history, dispatch, showing, ready, setConnected), [setMessage, setWinner, dispatch, history, ready, showing]);\r\n\r\n  return !connected ? (\r\n    <Box>\r\n      <Typography variant=\"h5\">Connecting...</Typography>\r\n    </Box>\r\n  ) : (\r\n    <Box display=\"flex\" flexWrap=\"wrap\">\r\n      <Canvas width={props.width} height={props.height} />\r\n      <SideBar setMessage={setMessage} />\r\n      <Snackbar open={!!message} onClose={() => setMessage(false)} message={message} key={message} />\r\n      <EndDialog teamCode={teamCode} winner={winner} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GamePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Box, Typography, TextField, Button } from \"@material-ui/core\";\r\nimport WebSocketClient from \"../shared/websocket.js\";\r\nimport messageTypes from \"shared/messageTypes\";\r\n\r\nconst MainPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [teamCode, setTeamCode] = useState();\r\n  const [error, setError] = useState({\r\n    error: false,\r\n    helperText: \"\",\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const validate = () => {\r\n    if (!teamCode) {\r\n      setError({ error: true, helperText: \"Please enter a code\" });\r\n    } else {\r\n      WebSocketClient.sendMessage({ type: messageTypes.REGISTER_FOR_TEAM, payload: { teamCode: teamCode } });\r\n    }\r\n  };\r\n\r\n  useEffect(() =>\r\n    WebSocketClient.addOnMessageListener(({type, payload}) => {\r\n      if(type){\r\n        switch(type){\r\n            case messageTypes.REGISTERED:\r\n                WebSocketClient.registered = true;\r\n            dispatch({ type: messageTypes.GET_STATE, payload: payload });\r\n\r\n                history.push(`/game/${teamCode}`);\r\n                return;\r\n            case messageTypes.REGISTER_FAILED:\r\n                setError({error:true,helperText:\"Registration failed; Please check the code\"})\r\n                return;\r\n            default:\r\n                return;\r\n\r\n        }\r\n      }\r\n    })\r\n  );\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\r\n      <Box display=\"flex\" flexDirection=\"column\" mx=\"auto\" mb={3}>\r\n        <Typography variant=\"h3\">BattleShip!</Typography>\r\n        <Box mx=\"auto\"><img alt=\"main-icon\" src=\"/assets/images/battleshipIcon.png\"></img></Box>\r\n      </Box>\r\n\r\n      <form noValidate autoComplete=\"off\">\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n          <Box m=\"auto\" mb={3}>\r\n            <TextField\r\n              display=\"box\"\r\n              onChange={(event) => {\r\n                setTeamCode(event.target.value);\r\n              }}\r\n              label=\"Team Code\"\r\n              error={error.error}\r\n              helperText={error.helperText}\r\n            />\r\n          </Box>\r\n          <Box m=\"auto\">\r\n            <Button onClick={validate} variant=\"contained\" color=\"primary\">\r\n              Join\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import { React } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport GamePage from \"../pages/GamePage\"\r\nimport MainPage from './../pages/MainPage';\r\n\r\nconst Routes = (props) => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/game/:teamCode\">\r\n                <GamePage {...props} />\r\n            </Route>\r\n            <Route path=\"/\">\r\n                <MainPage />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './config/store';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\"\nimport { Provider } from 'react-redux';\nimport Routes from \"./config/routes.js\";\nimport \"./scss/main.scss\"\nimport { useRef } from 'react';\n\n\nconst mainMargin = 64;\n\n\nconst Main = (props) => {\n  const [width, setWidth] = useState()\n  const [height, setHeight] = useState()\n  const main = useRef();\n\n  \n\n  useEffect(() => {\n    const handleResize = () => {\n      setHeight(window.innerHeight - mainMargin)\n      setWidth(window.innerWidth - mainMargin)\n    }\n    window.addEventListener('resize', handleResize)\n    setHeight(window.innerHeight - mainMargin)\n    setWidth(window.innerWidth - mainMargin)\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [main])\n\n  return (\n    <main ref={main}>\n      <Router>\n        <Routes width={width} height={height} />\n      </Router>\n    </main>\n  )\n}\n\nReactDOM.render(\n    <Provider store={store}>\n      <Main />\n    </Provider>,\n  document.getElementById('root')\n);\n\n","const gridLength = 7\r\n\r\nconst hasConflict = (xCor, yCor, rotation, ships, ship = \"NONE\", length = 1) =>\r\n    xCor > gridLength - 1 ||\r\n    (xCor > gridLength - length && rotation === 90) ||\r\n    xCor < 0 ||\r\n    yCor < 0 ||\r\n    yCor > gridLength - 1 ||\r\n    (rotation === 0 && yCor > gridLength - length) ||\r\n    ships.find((skippy) => {\r\n        const tempShip = skippy[1];\r\n        if (ship === skippy[0]) return false;\r\n        if (rotation === 90 && tempShip.rotation === 0)\r\n            return loopCors(tempShip, length, (i, ii) => xCor + i === tempShip.x && yCor === tempShip.y + ii);\r\n        if (rotation === 90 && tempShip.rotation === 90)\r\n            return loopCors(tempShip, length, (i, ii) => xCor + i === tempShip.x + ii && yCor === tempShip.y);\r\n        if (rotation === 0 && tempShip.rotation === 90)\r\n            return loopCors(tempShip, length, (i, ii) => yCor + i === tempShip.y && xCor === tempShip.x + ii);\r\n        if (rotation === 0 && tempShip.rotation === 0)\r\n            return loopCors(tempShip, length, (i, ii) => yCor + i === tempShip.y + ii && xCor === tempShip.x);\r\n        return false;\r\n    });\r\n\r\nconst loopCors = (ship, length, check) => {\r\n    for (let i = 0; i < length; i++) {\r\n        for (let ii = 0; ii < ship.length; ii++) {\r\n            if (check(i, ii)) return ship;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nmodule.exports.loopCors = loopCors;\r\nmodule.exports = hasConflict;\r\nmodule.exports.gridLength = gridLength;","module.exports = {\r\n   PLACING_SHIPS:\"PLACING_SHIPS\",\r\n   IN_TURN: \"IN_TURN\",\r\n   GAME_ENDED: \"GAME_ENDED\"\r\n}","module.exports = {\r\n    MOVE_SHIP: \"MOVE_SHIP\",\r\n    ROTATE_SHIP: \"ROTATE_SHIP\",\r\n    GUESS: \"GUESS\",\r\n    ENEMY_GUESS: \"ENEMY_GUESS\",\r\n    REGISTER_FOR_TEAM: \"REGISTER_FOR_TEAM\",\r\n    TEAM_READY: \"TEAM_READY\",\r\n    GET_STATE: \"GET_STATE\",\r\n    REGISTERED: \"REGISTERED\",\r\n    REGISTER_FAILED: \"REGISTER_FAILED\",\r\n    STATE_CHANGE: \"STATE_CHANGE\",\r\n    SELECT_BLOCK: \"SELECT_BLOCK\",\r\n    GAME_ENDED: \"GAME_ENDED\",\r\n    CHANGE_NAMES: \"CHANGE_NAMES\"\r\n}"],"sourceRoot":""}